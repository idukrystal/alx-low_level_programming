#include "main.h"

/**
 * binary_to_uint - converts a string of binary number to an unsigned int
 * @b: binary number as a string
 * Return: b in decimal or 0 om error
 */
unsigned int binary_to_uint(const char *b)
{
	unsigned int num = 0, i = 0, tmp, p = 0;

	if (b == NULL)
		return (0);
	while (b[i] != '\0')
		i++;
	while (i > 0)
	{
		tmp = b[--i] - '0';
		if (tmp > 1)
			return (0);
		num += tmp * (1  << p++);
	}
	return (num);
}

/**
 * _pow - raises a number to  the nth power
 * @num: the number
 * @pow: the power
 * Return: num ^ power
 */
unsigned int _pow(unsigned int num, unsigned int pow)
{
	unsigned int res = 1;

	if (num == 0)
	{
		if (pow == 0)
			exit(-1);
		return (0);
	}
	for (; pow > 0; pow--)
		res *= num;
	return (res);
}
